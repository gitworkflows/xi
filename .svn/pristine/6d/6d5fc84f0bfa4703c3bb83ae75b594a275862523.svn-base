package edu.helpers;

import java.io.BufferedReader;
import java.io.DataOutputStream;
import java.io.InputStream;
import java.io.InputStreamReader;
import java.net.HttpURLConnection;
import java.net.URL;
import java.net.URLConnection;
import java.net.URLEncoder;

import edu.dao.application.ApplicationDAO;

public class SmsSender implements Runnable {

	private String mobile;
	private String otp;
	private String appid;
	private String apptime;
	private String roll;
	private String pass;
	private String name;
	private String operation;
	
	private String text;


	public void run() {
		if (operation.equalsIgnoreCase("smsWFirst"))
			sendSMSWFirst_TT();		
		if (operation.equalsIgnoreCase("CancelledSMS"))
			cancelAd_College();	
		if (operation.equalsIgnoreCase("StaticSMS"))
			StaticSMS();		
		if (operation.equalsIgnoreCase("boardmessage"))/////////for   update mobile number
			ScodeSMS();
		
	}

	private String getSid(String mobile)
	{
		String sid = "BUET";
		/*if(mobile.substring(mobile.length()-9).substring(0,1).equalsIgnoreCase("7"))sid="BUETGP";
		else if(mobile.substring(mobile.length()-9).substring(0,1).equalsIgnoreCase("9"))sid="BUETBlink";
		else if(mobile.substring(mobile.length()-9).substring(0,1).equalsIgnoreCase("8"))sid="BUETROBI";
		else if(mobile.substring(mobile.length()-9).substring(0,1).equalsIgnoreCase("5"))sid="BUETTeletalk";
		else if(mobile.substring(mobile.length()-9).substring(0,1).equalsIgnoreCase("6"))sid="BUETAirtel";
		else if(mobile.substring(mobile.length()-9).substring(0,1).equalsIgnoreCase("1"))sid="BUETCitycell";*/
		return sid;
	}


	/////////////////////////////////////
	public void sendSMSWFirst_TT() {
		text ="Your ("+this.roll+") online application has been submitted successfully and your security code is "+otp+" - Board Authority.";
		String account = "robi";
		if(this.mobile.substring(this.mobile.length()-11).substring(0, 3).equalsIgnoreCase("017"))
			account = "ssl";
		else if(this.mobile.substring(this.mobile.length()-11).substring(0, 3).equalsIgnoreCase("018") || this.mobile.substring(this.mobile.length()-11).substring(0, 3).equalsIgnoreCase("016"))
			account = "robi";
		else
			account = "ssl";
		account = "robi";
		
		if(account.equalsIgnoreCase("ssl"))
		{
			
			String targetURL = "http://sms.sslwireless.com/pushapi/dynamic_buet/server.php";
			URL url;
			HttpURLConnection connection = null;
			try {
				StringBuilder urlParameter = new StringBuilder();
				urlParameter.append("sid=").append(URLEncoder.encode(getSid(this.mobile), "UTF-8"));
				urlParameter.append("&user=").append(URLEncoder.encode("buetiict", "UTF-8"));
				urlParameter.append("&pass=").append(URLEncoder.encode("buet@123", "UTF-8"));
				urlParameter.append("&sms[0][0]=").append(URLEncoder.encode("88" + this.mobile, "UTF-8"));
				urlParameter.append("&sms[0][1]=").append(URLEncoder.encode(text, "UTF-8"));
				urlParameter.append("&sms[0][2]=").append(URLEncoder.encode("abc", "UTF-8"));
				url = new URL(targetURL);
				connection = (HttpURLConnection) url.openConnection();
				connection.setRequestMethod("GET");
				connection.setRequestProperty("Content-Type", "application/x-www-form-urlencoded");
				connection.setRequestProperty("Content-Length","" + Integer.toString(urlParameter.toString().getBytes().length));
				connection.setRequestProperty("Content-Language", "en-US");
				connection.setUseCaches(false);
				connection.setDoInput(true);
				connection.setDoOutput(true);
				DataOutputStream wr = new DataOutputStream(connection.getOutputStream());
				wr.writeBytes(urlParameter.toString());
				wr.flush();
				wr.close();
				InputStream is = connection.getInputStream();
				BufferedReader rd = new BufferedReader(new InputStreamReader(is));
				String line;
				StringBuffer response = new StringBuffer();
				while ((line = rd.readLine()) != null) {
					response.append(line);
					response.append('\r');
				}
				rd.close();
			} catch (Exception e) {
				e.printStackTrace();
			} finally {
				if (connection != null) {
					connection.disconnect();
				}
			}			
		}
		else if(account.equalsIgnoreCase("robi"))
		{
			try {
				StringBuilder urlString = new StringBuilder(
						"https://api.mobireach.com.bd/SendTextMessage?").append("Username=" + URLEncoder.encode("iictbuet", "UTF-8")).append("&Password=" + URLEncoder.encode("Airtel@123", "UTF-8"))
						.append("&From=" + URLEncoder.encode("8801847170701", "UTF-8")).append("&To=" + URLEncoder.encode("88" + this.mobile, "UTF-8")).append("&charset=" + URLEncoder.encode("UTF-8", "UTF-8"))
						.append("&Message=" + URLEncoder.encode(text, "UTF-8"));
				URL smsUrl;
				smsUrl = new URL(urlString.toString());
				URLConnection urlConnector = smsUrl.openConnection();
				BufferedReader in = new BufferedReader(new InputStreamReader(
						urlConnector.getInputStream()));
				String inputLine;
				String inputLine1 = "";
				while ((inputLine = in.readLine()) != null) {
					if (inputLine != null)
						inputLine1 += inputLine;
				}
				in.close();
				System.out.println("SMS==" + text);
			} catch (Exception e) {
				e.printStackTrace();
			}
		}

	}
	
	
	
	
	
	
	
	public void StaticSMS() {
		if(this.mobile.substring(this.mobile.length()-11).substring(0, 3).equalsIgnoreCase("017"))
		{
			String targetURL = "http://sms.sslwireless.com/pushapi/dynamic_buet/server.php";
			URL url;
			HttpURLConnection connection = null;
			try {
				StringBuilder urlParameter = new StringBuilder();
				urlParameter.append("sid=").append(URLEncoder.encode(getSid(this.mobile), "UTF-8"));
				urlParameter.append("&user=").append(URLEncoder.encode("buetiict", "UTF-8"));
				urlParameter.append("&pass=").append(URLEncoder.encode("buet@123", "UTF-8"));
				urlParameter.append("&sms[0][0]=").append(URLEncoder.encode("88" + this.mobile, "UTF-8"));
				urlParameter.append("&sms[0][1]=").append(URLEncoder.encode(text, "UTF-8"));
				urlParameter.append("&sms[0][2]=").append(URLEncoder.encode("abc", "UTF-8"));
				url = new URL(targetURL);
				connection = (HttpURLConnection) url.openConnection();
				connection.setRequestMethod("GET");
				connection.setRequestProperty("Content-Type", "application/x-www-form-urlencoded");
				connection.setRequestProperty("Content-Length","" + Integer.toString(urlParameter.toString().getBytes().length));
				connection.setRequestProperty("Content-Language", "en-US");
				connection.setUseCaches(false);
				connection.setDoInput(true);
				connection.setDoOutput(true);
				DataOutputStream wr = new DataOutputStream(connection.getOutputStream());
				wr.writeBytes(urlParameter.toString());
				wr.flush();
				wr.close();
				InputStream is = connection.getInputStream();
				BufferedReader rd = new BufferedReader(new InputStreamReader(is));
				String line;
				StringBuffer response = new StringBuffer();
				while ((line = rd.readLine()) != null) {
					response.append(line);
					response.append('\r');
				}
				rd.close();
			} catch (Exception e) {
				e.printStackTrace();
			} finally {
				if (connection != null) {
					connection.disconnect();
				}
			}	
//			 try {           
//				 String token = "69113704e9d1537d58c104b512db94f9";
//		         StringBuilder urlString = new StringBuilder(
//		                 "http://sms.greenweb.com.bd/api.php?").append("token=" + URLEncoder.encode(token, "UTF-8")).append("&to=" + URLEncoder.encode(this.mobile, "UTF-8"))
//		                 .append("&message=" + URLEncoder.encode(text, "UTF-8"));
//		         URL smsUrl;
//		         smsUrl = new URL(urlString.toString());
//		         URLConnection urlConnector = smsUrl.openConnection();
//		         BufferedReader in = new BufferedReader(new InputStreamReader(
//		                 urlConnector.getInputStream()));
//		         String inputLine;
//		         String inputLine1 = "";
//		         while ((inputLine = in.readLine()) != null) {
//		             System.out.println(inputLine);
//		             if (inputLine != null)
//		                 inputLine1 += inputLine;
//		         }
//		         in.close();
//		         System.out.println("SMS==" + text);		        
//
//		     } catch (Exception e) {
//		         e.printStackTrace();
//		     }     
			
		}
//		else if(this.mobile.substring(this.mobile.length()-11).substring(0, 3).equalsIgnoreCase("015"))
//		{
//			try {
//				StringBuilder urlString = new StringBuilder(
//						"http://bulksms.teletalk.com.bd/link_sms_send.php?").append("op=" + URLEncoder.encode("SMS", "UTF-8")).append("&user=" + URLEncoder.encode("IICT", "UTF-8"))
//						.append("&pass=" + URLEncoder.encode("iict369#^(buet", "UTF-8")).append("&mobile=" + URLEncoder.encode("88" + this.mobile, "UTF-8")).append("&charset=" + URLEncoder.encode("UTF-8", "UTF-8"))
//						.append("&sms=" + URLEncoder.encode("Your ("+this.roll+")"
//								+ " online application has been submitted successfully and your security code is "+otp+" - Board Authority.", "UTF-8"));
//				URL smsUrl;
//				smsUrl = new URL(urlString.toString());
//				URLConnection urlConnector = smsUrl.openConnection();
//				BufferedReader in = new BufferedReader(new InputStreamReader(
//						urlConnector.getInputStream()));
//				String inputLine;
//				String inputLine1 = "";
//				while ((inputLine = in.readLine()) != null) {
//					ApplicationDAO.ApplicationSMSUpdate(this.appid, this.mobile);
//					
//					//System.out.println(inputLine);
//					if (inputLine != null)
//						inputLine1 += inputLine;
//				}
//				in.close();
//				System.out.println("Mobile="+this.mobile +" SMS==Your ("+this.roll+")"
//								+ " online application has been submitted successfully and your security code is "+otp+" - Board Authority.)");
//				System.out.println("new App SMS Sent ID: "+this.appid);
//			} catch (Exception e) {
//				e.printStackTrace();
//			}
//		}
		else if(this.mobile.substring(this.mobile.length()-11).substring(0, 3).equalsIgnoreCase("018") || this.mobile.substring(this.mobile.length()-11).substring(0, 3).equalsIgnoreCase("016"))
		{
			try {
				StringBuilder urlString = new StringBuilder(
						"https://api.mobireach.com.bd/SendTextMessage?").append("Username=" + URLEncoder.encode("iictbuet", "UTF-8")).append("&Password=" + URLEncoder.encode("Airtel@123", "UTF-8"))
						.append("&From=" + URLEncoder.encode("8801847170701", "UTF-8")).append("&To=" + URLEncoder.encode("88" + this.mobile, "UTF-8")).append("&charset=" + URLEncoder.encode("UTF-8", "UTF-8"))
						.append("&Message=" + URLEncoder.encode(text, "UTF-8"));
				URL smsUrl;
				smsUrl = new URL(urlString.toString());
				URLConnection urlConnector = smsUrl.openConnection();
				BufferedReader in = new BufferedReader(new InputStreamReader(
						urlConnector.getInputStream()));
				String inputLine;
				String inputLine1 = "";
				while ((inputLine = in.readLine()) != null) {
					if (inputLine != null)
						inputLine1 += inputLine;
				}
				in.close();
				System.out.println("SMS==" + text);
			} catch (Exception e) {
				e.printStackTrace();
			}
		}
		else
		{

			String targetURL = "http://sms.sslwireless.com/pushapi/dynamic_buet/server.php";
			URL url;
			HttpURLConnection connection = null;
			try {
				StringBuilder urlParameter = new StringBuilder();
				urlParameter.append("sid=").append(URLEncoder.encode(getSid(this.mobile), "UTF-8"));
				urlParameter.append("&user=").append(URLEncoder.encode("buetiict", "UTF-8"));
				urlParameter.append("&pass=").append(URLEncoder.encode("buet@123", "UTF-8"));
				urlParameter.append("&sms[0][0]=").append(URLEncoder.encode("88" + this.mobile, "UTF-8"));
				urlParameter.append("&sms[0][1]=").append(URLEncoder.encode(text, "UTF-8"));
				urlParameter.append("&sms[0][2]=").append(URLEncoder.encode("abc", "UTF-8"));
				url = new URL(targetURL);
				connection = (HttpURLConnection) url.openConnection();
				connection.setRequestMethod("GET");
				connection.setRequestProperty("Content-Type", "application/x-www-form-urlencoded");
				connection.setRequestProperty("Content-Length","" + Integer.toString(urlParameter.toString().getBytes().length));
				connection.setRequestProperty("Content-Language", "en-US");
				connection.setUseCaches(false);
				connection.setDoInput(true);
				connection.setDoOutput(true);
				DataOutputStream wr = new DataOutputStream(connection.getOutputStream());
				wr.writeBytes(urlParameter.toString());
				wr.flush();
				wr.close();
				InputStream is = connection.getInputStream();
				BufferedReader rd = new BufferedReader(new InputStreamReader(is));
				String line;
				StringBuffer response = new StringBuffer();
				while ((line = rd.readLine()) != null) {
					response.append(line);
					response.append('\r');
				}
				rd.close();
			} catch (Exception e) {
				e.printStackTrace();
			} finally {
				if (connection != null) {
					connection.disconnect();
				}
			}		
		}
		ApplicationDAO.StaticSMSUpdate(this.appid);
	}

	
	
	public void ScodeSMS() {
		
		String targetURL = "http://sms.sslwireless.com/pushapi/dynamic_buet/server.php";
		URL url;
		HttpURLConnection connection = null;
		try {
			StringBuilder urlParameter = new StringBuilder();
			urlParameter.append("sid=").append(URLEncoder.encode(getSid(this.mobile), "UTF-8"));
			urlParameter.append("&user=").append(URLEncoder.encode("buetiict", "UTF-8"));
			urlParameter.append("&pass=").append(URLEncoder.encode("buet@123", "UTF-8"));
			urlParameter.append("&sms[0][0]=").append(URLEncoder.encode("88" + this.mobile, "UTF-8"));
			urlParameter.append("&sms[0][1]=").append(URLEncoder.encode(text, "UTF-8"));
			urlParameter.append("&sms[0][2]=").append(URLEncoder.encode("abc", "UTF-8"));
			url = new URL(targetURL);
			connection = (HttpURLConnection) url.openConnection();
			connection.setRequestMethod("GET");
			connection.setRequestProperty("Content-Type", "application/x-www-form-urlencoded");
			connection.setRequestProperty("Content-Length","" + Integer.toString(urlParameter.toString().getBytes().length));
			connection.setRequestProperty("Content-Language", "en-US");
			connection.setUseCaches(false);
			connection.setDoInput(true);
			connection.setDoOutput(true);
			DataOutputStream wr = new DataOutputStream(connection.getOutputStream());
			wr.writeBytes(urlParameter.toString());
			wr.flush();
			wr.close();
			InputStream is = connection.getInputStream();
			BufferedReader rd = new BufferedReader(new InputStreamReader(is));
			String line;
			StringBuffer response = new StringBuffer();
			while ((line = rd.readLine()) != null) {
				System.out.println(line);
				response.append(line);
				response.append('\r');
			}
			rd.close();
		} catch (Exception e) {
			e.printStackTrace();
		} finally {
			if (connection != null) {
				connection.disconnect();
			}
		}
	}
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	public void cancelAd_College() {
		
		
		try {
			StringBuilder urlString = new StringBuilder(
					"https://api.mobireach.com.bd/SendTextMessage?").append("Username=" + URLEncoder.encode("iictbuet", "UTF-8")).append("&Password=" + URLEncoder.encode("Airtel@123", "UTF-8"))
					.append("&From=" + URLEncoder.encode("8801847170701", "UTF-8")).append("&To=" + URLEncoder.encode("88" + this.mobile, "UTF-8")).append("&charset=" + URLEncoder.encode("UTF-8", "UTF-8"))
					.append("&Message=" + URLEncoder.encode(text, "UTF-8"));
			URL smsUrl;
			smsUrl = new URL(urlString.toString());
			URLConnection urlConnector = smsUrl.openConnection();
			BufferedReader in = new BufferedReader(new InputStreamReader(
					urlConnector.getInputStream()));
			String inputLine;
			String inputLine1 = "";
			while ((inputLine = in.readLine()) != null) {
				if (inputLine != null)
					inputLine1 += inputLine;
			}
			in.close();
			System.out.println("SMS==" + text);
		} catch (Exception e) {
			e.printStackTrace();
		}		

	}

	public String getMobile() {
		return mobile;
	}

	public void setMobile(String mobile) {
		this.mobile = mobile;
	}

	public String getOtp() {
		return otp;
	}

	public void setOtp(String otp) {
		this.otp = otp;
	}

	public String getAppid() {
		return appid;
	}

	public void setAppid(String appid) {
		this.appid = appid;
	}

	public String getPass() {
		return pass;
	}

	public void setPass(String pass) {
		this.pass = pass;
	}

	public String getName() {
		return name;
	}

	public void setName(String name) {
		this.name = name;
	}

	public String getOperation() {
		return operation;
	}

	public void setOperation(String operation) {
		this.operation = operation;
	}

	public String getText() {
		return text;
	}

	public void setText(String text) {
		this.text = text;
	}

	public String getRoll() {
		return roll;
	}

	public void setRoll(String roll) {
		this.roll = roll;
	}

	public String getApptime() {
		return apptime;
	}

	public void setApptime(String apptime) {
		this.apptime = apptime;
	}
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	


}
